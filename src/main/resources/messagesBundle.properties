#I/O
io.matchesFileWriter.resultFileCreated=Result file for {0} created: {1}
io.matchesFileWriter.resultFileNotCreated=Matches not found for {0}
io.URLFileReader.readingURLsFile=Reading URLs file {0}...

#Patterns
pattern.atPattern.name=At (@) Pattern
pattern.atPattern.regex=^@[A-Za-z0-9_]'{'1,15'}'$
pattern.hashtagPattern.name=Hashtag (\#) Pattern
pattern.hashtagPattern.regex=\\B\#\\w*[a-zA-Z]+\\w*
pattern.scraperPatternFactory.errorCreatingPattern=Impossible to create an instance of the Pattern class: {0}
pattern.exception.patternNotFoundException=Pattern not found!

#Scraper
app.welcome=Welcome to the Basic Scraper!
app.queryURLsFilePath=Please write the source file path that contains the URLs (absolute path):
scraper.finished=Scraper finished!
scraper.starting=Starting scraper for {0}. Pattern used: {1}
scraper.errorReadingURLsFile=Cannot read the file {0}. Please verify the path, the name and its permissions
scraper.errorShutingDownService=Error awaiting for termination of the executor service: {0}
scraperTask.scrapingFile=Scraping {0}...
scraperTask.errorMalformedURL=The URL is malformed or is using an inadequate protocol: {0}
scraperTask.errorRequestingPage=Error {0} requesting the page: {1}
scraperTask.errorTimeout=Timeout requesting {0}
scraperTask.errorProcessingPage=Cannot process the URL ({0}): {1}
